generate_sample <- function(n, p) {
sample(c(1,0), size=n, replace=TRUE, prob=c(p,1-p))
}
for (i in 1:nsims) {
Y <- generate_sample(n,p)
mc_est[i] <- mean(Y)
mc_var[i] <- var(Y)
}
n <- 100
p <- 0.5
nsims <- 1000
mc_est <- c()
mc_var <- c()
for (i in 1:nsims) {
Y <- generate_sample(n,p)
mc_est[i] <- mean(Y)
mc_var[i] <- var(Y)
}
bias <- mean(mc_est) - p
bias
var <- var(mc_est)
var
mse <- bias^2 + var
mse
t_stat <- sqrt(n)*(mc_est - H0) / sqrt(mc_var)
H0 <- p
t_stat <- sqrt(n)*(mc_est - H0) / sqrt(mc_var)
ggplot(data.frame(t_stat=t_stat), aes(x=t_stat)) +
geom_histogram(bins=30) +
theme_bw()
library(ggplot2)
ggplot(data.frame(t_stat=t_stat), aes(x=t_stat)) +
geom_histogram(bins=30) +
theme_bw()
n <- 100
p <- 0.5
nsims <- 1000
mc_est <- c()
mc_var <- c()
for (i in 1:nsims) {
Y <- generate_sample(n,p)
mc_est[i] <- mean(Y)
mc_var[i] <- var(Y)
}
bias <- mean(mc_est) - p
bias
var <- var(mc_est)
var
mse <- bias^2 + var
mse
H0 <- p
t_stat <- sqrt(n)*(mc_est - H0) / sqrt(mc_var)
library(ggplot2)
ggplot(data.frame(t_stat=t_stat), aes(x=t_stat)) +
geom_histogram(bins=30) +
theme_bw()
n <- 1000
p <- 0.5
nsims <- 1000
mc_est <- c()
mc_var <- c()
for (i in 1:nsims) {
Y <- generate_sample(n,p)
mc_est[i] <- mean(Y)
mc_var[i] <- var(Y)
}
bias <- mean(mc_est) - p
bias
var <- var(mc_est)
var
mse <- bias^2 + var
mse
H0 <- p
t_stat <- sqrt(n)*(mc_est - H0) / sqrt(mc_var)
library(ggplot2)
ggplot(data.frame(t_stat=t_stat), aes(x=t_stat)) +
geom_histogram(bins=30) +
theme_bw()
n <- 5
p <- 0.5
nsims <- 1000
mc_est <- c()
mc_var <- c()
for (i in 1:nsims) {
Y <- generate_sample(n,p)
mc_est[i] <- mean(Y)
mc_var[i] <- var(Y)
}
bias <- mean(mc_est) - p
bias
var <- var(mc_est)
var
mse <- bias^2 + var
mse
H0 <- p
t_stat <- sqrt(n)*(mc_est - H0) / sqrt(mc_var)
library(ggplot2)
ggplot(data.frame(t_stat=t_stat), aes(x=t_stat)) +
geom_histogram(bins=30) +
theme_bw()
n <- 10
p <- 0.5
nsims <- 1000
mc_est <- c()
mc_var <- c()
for (i in 1:nsims) {
Y <- generate_sample(n,p)
mc_est[i] <- mean(Y)
mc_var[i] <- var(Y)
}
bias <- mean(mc_est) - p
bias
var <- var(mc_est)
var
mse <- bias^2 + var
mse
H0 <- p
t_stat <- sqrt(n)*(mc_est - H0) / sqrt(mc_var)
library(ggplot2)
ggplot(data.frame(t_stat=t_stat), aes(x=t_stat)) +
geom_histogram(bins=30) +
theme_bw()
n <- 100
p <- 0.99
nsims <- 1000
mc_est <- c()
mc_var <- c()
for (i in 1:nsims) {
Y <- generate_sample(n,p)
mc_est[i] <- mean(Y)
mc_var[i] <- var(Y)
}
bias <- mean(mc_est) - p
bias
var <- var(mc_est)
var
mse <- bias^2 + var
mse
H0 <- p
t_stat <- sqrt(n)*(mc_est - H0) / sqrt(mc_var)
library(ggplot2)
ggplot(data.frame(t_stat=t_stat), aes(x=t_stat)) +
geom_histogram(bins=30) +
theme_bw()
n <- 100
p <- 0.9
nsims <- 1000
mc_est <- c()
mc_var <- c()
for (i in 1:nsims) {
Y <- generate_sample(n,p)
mc_est[i] <- mean(Y)
mc_var[i] <- var(Y)
}
bias <- mean(mc_est) - p
bias
var <- var(mc_est)
var
mse <- bias^2 + var
mse
H0 <- p
t_stat <- sqrt(n)*(mc_est - H0) / sqrt(mc_var)
library(ggplot2)
ggplot(data.frame(t_stat=t_stat), aes(x=t_stat)) +
geom_histogram(bins=30) +
theme_bw()
devtools::install_github("bcallaway11/ife")
